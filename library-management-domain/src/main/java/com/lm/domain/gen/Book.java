package com.lm.domain.gen;

// Generated Mar 29, 2015 8:20:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "Book", catalog = "chorus")
public class Book implements java.io.Serializable {

	private int bookId;
	private Integer version;
	private String bookName;
	private String authorName;
	private String isbn;
	private Integer bookCount;
	private Date updatedOn;
	private String updatedBy;
	private Date createdOn;
	private String createdBy;
	private Set<BookType> bookTypes = new HashSet<BookType>(0);
	private Set<UserActivity> userActivities = new HashSet<UserActivity>(0);

	public Book() {
	}

	public Book(int bookId) {
		this.bookId = bookId;
	}

	public Book(int bookId, String bookName, String authorName, String isbn,
			Integer bookCount, Date updatedOn, String updatedBy,
			Date createdOn, String createdBy, Set<BookType> bookTypes,
			Set<UserActivity> userActivities) {
		this.bookId = bookId;
		this.bookName = bookName;
		this.authorName = authorName;
		this.isbn = isbn;
		this.bookCount = bookCount;
		this.updatedOn = updatedOn;
		this.updatedBy = updatedBy;
		this.createdOn = createdOn;
		this.createdBy = createdBy;
		this.bookTypes = bookTypes;
		this.userActivities = userActivities;
	}

	@Id
	@Column(name = "bookId", unique = true, nullable = false)
	public int getBookId() {
		return this.bookId;
	}

	public void setBookId(int bookId) {
		this.bookId = bookId;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "bookName", length = 200)
	public String getBookName() {
		return this.bookName;
	}

	public void setBookName(String bookName) {
		this.bookName = bookName;
	}

	@Column(name = "authorName", length = 200)
	public String getAuthorName() {
		return this.authorName;
	}

	public void setAuthorName(String authorName) {
		this.authorName = authorName;
	}

	@Column(name = "ISBN", length = 200)
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "bookCount")
	public Integer getBookCount() {
		return this.bookCount;
	}

	public void setBookCount(Integer bookCount) {
		this.bookCount = bookCount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedOn", length = 23)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "updatedBy", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", length = 23)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "createdBy", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "BookBookTypeXref", catalog = "chorus", joinColumns = { @JoinColumn(name = "bookId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "bookTypeId", nullable = false, updatable = false) })
	public Set<BookType> getBookTypes() {
		return this.bookTypes;
	}

	public void setBookTypes(Set<BookType> bookTypes) {
		this.bookTypes = bookTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<UserActivity> getUserActivities() {
		return this.userActivities;
	}

	public void setUserActivities(Set<UserActivity> userActivities) {
		this.userActivities = userActivities;
	}

}
